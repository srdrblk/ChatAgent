// <auto-generated />
using System;
using Core.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Core.Migrations
{
    [DbContext(typeof(AgentContext))]
    [Migration("20230822233358_initiaze_database")]
    partial class initiaze_database
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.Agent", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<long>("TeamId")
                        .HasColumnType("bigint");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("Agents");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "A1",
                            Status = 1,
                            TeamId = 1L,
                            Type = 3
                        },
                        new
                        {
                            Id = 2L,
                            Name = "A2",
                            Status = 1,
                            TeamId = 1L,
                            Type = 1
                        },
                        new
                        {
                            Id = 3L,
                            Name = "A3",
                            Status = 1,
                            TeamId = 1L,
                            Type = 1
                        },
                        new
                        {
                            Id = 4L,
                            Name = "A4",
                            Status = 1,
                            TeamId = 1L,
                            Type = 0
                        },
                        new
                        {
                            Id = 5L,
                            Name = "B1",
                            Status = 1,
                            TeamId = 2L,
                            Type = 2
                        },
                        new
                        {
                            Id = 6L,
                            Name = "B2",
                            Status = 1,
                            TeamId = 2L,
                            Type = 1
                        },
                        new
                        {
                            Id = 7L,
                            Name = "B3",
                            Status = 1,
                            TeamId = 2L,
                            Type = 0
                        },
                        new
                        {
                            Id = 8L,
                            Name = "B4",
                            Status = 1,
                            TeamId = 2L,
                            Type = 0
                        },
                        new
                        {
                            Id = 9L,
                            Name = "C1",
                            Status = 1,
                            TeamId = 3L,
                            Type = 1
                        },
                        new
                        {
                            Id = 10L,
                            Name = "C2",
                            Status = 1,
                            TeamId = 3L,
                            Type = 1
                        },
                        new
                        {
                            Id = 11L,
                            Name = "O1",
                            Status = 1,
                            TeamId = 4L,
                            Type = 0
                        },
                        new
                        {
                            Id = 12L,
                            Name = "O2",
                            Status = 1,
                            TeamId = 4L,
                            Type = 0
                        },
                        new
                        {
                            Id = 13L,
                            Name = "O3",
                            Status = 1,
                            TeamId = 4L,
                            Type = 0
                        },
                        new
                        {
                            Id = 14L,
                            Name = "O4",
                            Status = 1,
                            TeamId = 4L,
                            Type = 0
                        },
                        new
                        {
                            Id = 15L,
                            Name = "O5",
                            Status = 1,
                            TeamId = 4L,
                            Type = 0
                        },
                        new
                        {
                            Id = 16L,
                            Name = "O6",
                            Status = 1,
                            TeamId = 4L,
                            Type = 0
                        });
                });

            modelBuilder.Entity("Entities.Chat", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("AgentId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Statu")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<int>("WaitingDuration")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AgentId");

                    b.HasIndex("UserId");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("Entities.Message", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("ChatId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Direction")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("Entities.Support", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Supports");
                });

            modelBuilder.Entity("Entities.Team", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "A",
                            Status = 0,
                            Type = 1
                        },
                        new
                        {
                            Id = 2L,
                            Name = "B",
                            Status = 0,
                            Type = 2
                        },
                        new
                        {
                            Id = 3L,
                            Name = "C",
                            Status = 0,
                            Type = 3
                        },
                        new
                        {
                            Id = 4L,
                            Name = "O",
                            Status = 0,
                            Type = 4
                        });
                });

            modelBuilder.Entity("Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Entities.Agent", b =>
                {
                    b.HasOne("Entities.Team", "Team")
                        .WithMany("Agents")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Team");
                });

            modelBuilder.Entity("Entities.Chat", b =>
                {
                    b.HasOne("Entities.Agent", "Agent")
                        .WithMany("Chat")
                        .HasForeignKey("AgentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agent");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Entities.Message", b =>
                {
                    b.HasOne("Entities.Chat", null)
                        .WithMany("Messages")
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Entities.Support", b =>
                {
                    b.HasOne("Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Entities.Agent", b =>
                {
                    b.Navigation("Chat");
                });

            modelBuilder.Entity("Entities.Chat", b =>
                {
                    b.Navigation("Messages");
                });

            modelBuilder.Entity("Entities.Team", b =>
                {
                    b.Navigation("Agents");
                });
#pragma warning restore 612, 618
        }
    }
}
